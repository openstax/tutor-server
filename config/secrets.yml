# DO NOT write any real secrets here directly. Use environment variables instead.

# Be sure to restart your server when you modify this file.

# Your secret key is used for verifying the integrity of signed cookies.
# If you change this key, all old signed cookies will become invalid!

# Make sure the secret is at least 30 characters and all random,
# no regular words or you'll be exposed to dictionary attacks.
# You can use `rake secret` to generate a secure secret key.

# Make sure the secrets in this file are kept private
# if you're sharing your code publicly.
development:
  secret_key_base: <%= ENV['SECRET_KEY_BASE'] || '8adbae8dca077320646d96808890138f8e9256da4f311eeffde38405ca11b7c0' %>
  mail_site_url: <%= ENV['MAIL_SITE_URL'] || 'http://localhost:3001' %>
  assets_url: <%= ENV['ASSETS_URL'] || 'http://localhost:8000/dist' %>
  demo_user_password: <%= ENV['DEMO_USER_PASSWORD'] || 'password' %>
  environment_name: development
  exception_contact_name: <%= ENV['EXCEPTION_CONTACT_NAME'] || 'OpenStax' %>
  response_validation:
    url: <%= ENV['RESPONSE_VALIDATION_URL'] || 'http://localhost:5000/validate' %>
    timeout: <%= ENV['RESPONSE_VALIDATION_TIMEOUT'] || 10.minutes %>
    stub: <%= ActiveModel::Type::Boolean.new.cast(ENV.fetch('RESPONSE_VALIDATION_STUB', true)) %>
  salesforce:
    login_domain: <%= ENV['SALESFORCE_LOGIN_DOMAIN'] || 'test.salesforce.com' %>
    username: <%= ENV['SALESFORCE_USERNAME'] %>
    password: <%= ENV['SALESFORCE_PASSWORD'] %>
    security_token: <%= ENV['SALESFORCE_SECURITY_TOKEN'] %>
    consumer_key: <%= ENV['SALESFORCE_CONSUMER_KEY'] %>
    consumer_secret: <%= ENV['SALESFORCE_CONSUMER_SECRET'] %>
  redis:
    password: <%= ENV['REDIS_PASSWORD'] %>
    host: <%= ENV['REDIS_HOST'] || 'localhost' %>
    port: <%= ENV['REDIS_PORT'] %>
    db: <%= ENV['REDIS_DB'] %>
    url: <%= ENV['REDIS_URL'] %>
    namespaces:
      cache: <%= ENV['REDIS_NAMESPACES_CACHE'] || 'cache' %>
      settings: <%= ENV['REDIS_NAMESPACES_SETTINGS'] || 'settings' %>
      jobba: <%= ENV['REDIS_NAMESPACES_JOBBA'] || 'jobba' %>
      active_force: <%= ENV['REDIS_NAMESPACES_ACTIVE_FORCE'] || 'active_force' %>
      fake_exercises: <%= ENV['REDIS_NAMESPACES_FAKE_EXERCISES'] || 'fake_exercises' %>
      fake_payments: <%= ENV['REDIS_NAMESPACES_FAKE_PAYMENTS'] || 'fake_payments' %>
  box:
    client_id: <%= ENV['BOX_CLIENT_ID'] %>
    client_secret: <%= ENV['BOX_CLIENT_SECRET'] %>
    jwt_public_key_id: <%= ENV['BOX_JWT_PUBLIC_KEY_ID'] %>
    jwt_private_key: <%= ENV['BOX_JWT_PRIVATE_KEY']&.inspect %>
    jwt_private_key_password: <%= ENV['BOX_JWT_PRIVATE_KEY_PASSWORD'] %>
    enterprise_id: "<%= ENV['BOX_ENTERPRISE_ID'] %>"
    exports_folder: <%= ENV['BOX_EXPORTS_FOLDER'] || 'TestUploads' %>
  lms:
    willo_labs:
      key: <%= ENV['WILLO_LABS_KEY'] %>
      secret: <%= ENV['WILLO_LABS_SECRET'] %>
  openstax:
    accounts:
      client_id: <%= ENV['OPENSTAX_ACCOUNTS_CLIENT_ID'] %>
      secret: <%= ENV['OPENSTAX_ACCOUNTS_SECRET'] %>
      url: <%= ENV['OPENSTAX_ACCOUNTS_URL'] || 'http://localhost:2999' %>
      stub: <%= ActiveModel::Type::Boolean.new.cast(ENV.fetch('OPENSTAX_ACCOUNTS_STUB', true)) %>
    content:
      abl_url: <%= ENV['OPENSTAX_CONTENT_ABL_URL'] || 'https://raw.githubusercontent.com/openstax/content-manager-approved-books/master/approved-book-list.json' %>
      archive_path: <%= ENV['OPENSTAX_CONTENT_ARCHIVE_PATH'] || 'apps/archive' %>
      bucket_name: <%= ENV['OPENSTAX_CONTENT_BUCKET_NAME'] %>
      domain: <%= ENV['OPENSTAX_CONTENT_DOMAIN'] || 'openstax.org' %>
      s3_region: <%= ENV['OPENSTAX_CONTENT_S3_REGION'] || 'us-east-1' %>
      s3_access_key_id: <%= ENV['OPENSTAX_CONTENT_S3_ACCESS_KEY_ID'] %>
      s3_secret_access_key: <%= ENV['OPENSTAX_CONTENT_S3_SECRET_ACCESS_KEY'] %>
    exercises:
      client_id: <%= ENV['OPENSTAX_EXERCISES_CLIENT_ID'] %>
      secret: <%= ENV['OPENSTAX_EXERCISES_SECRET'] %>
      url: <%= ENV['OPENSTAX_EXERCISES_URL'] || 'https://exercises.openstax.org' %>
      stub: <%= ActiveModel::Type::Boolean.new.cast(ENV.fetch('OPENSTAX_EXERCISES_STUB', false)) %>
    payments:
      client_id: <%= ENV['OPENSTAX_PAYMENTS_CLIENT_ID'] %>
      secret: <%= ENV['OPENSTAX_PAYMENTS_SECRET'] %>
      url: <%= ENV['OPENSTAX_PAYMENTS_URL'] %>
      embed_js_url: <%= ENV['OPENSTAX_PAYMENTS_EMBED_JS_URL'] || 'http://localhost:8001/pay/embed.js' %>
      product_uuid: <%= ENV['OPENSTAX_PAYMENTS_PRODUCT_UUID'] || '6d60ab29-3b3d-575a-93ef-57d62e30984c' %>
      url: <%= ENV['OPENSTAX_PAYMENTS_URL'] %>
      stub: <%= ActiveModel::Type::Boolean.new.cast(ENV.fetch('OPENSTAX_PAYMENTS_STUB', true)) %>
    osweb:
      base_url: <%= ENV['OPENSTAX_OSWEB_BASE_URL'] || 'https://cms-qa.openstax.org' %>

test:
  secret_key_base: c839cca39849dacab21de5bdfe69d921502e74c1b6c176208161ce4c1b84fd0a
  mail_site_url: http://localhost:3001
  assets_url: http://localhost:8000/dist
  demo_user_password: password
  environment_name: test
  exception_contact_name: OpenStax
  response_validation:
    url: http://localhost:5000/validate
    timeout: 600
    stub: true
  salesforce:
    login_domain: <%= ENV['SALESFORCE_LOGIN_DOMAIN'] || 'test.salesforce.com' %>
    username: <%= ENV['SALESFORCE_USERNAME'] || 'salesforce_username' %>
    password: <%= ENV['SALESFORCE_PASSWORD'] || 'salesforce_password' %>
    security_token: <%= ENV['SALESFORCE_SECURITY_TOKEN'] || 'salesforce_security_token' %>
    consumer_key: <%= ENV['SALESFORCE_CONSUMER_KEY'] || 'salesforce_consumer_key' %>
    consumer_secret: <%= ENV['SALESFORCE_CONSUMER_SECRET'] || 'salesforce_consumer_secret' %>
  redis:
    password: <%= ENV['REDIS_PASSWORD'] %>
    host: <%= ENV['REDIS_HOST'] || 'localhost' %>
    port: <%= ENV['REDIS_PORT'] %>
    db: <%= ENV['REDIS_DB'] %>
    url: <%= ENV['REDIS_URL'] %>
    namespaces:
      cache: cache
      settings: settings
      jobba: jobba
      fake_exercises: fake_exercises
      fake_payments: fake_payments
  box:
    client_id: <%= ENV['BOX_CLIENT_ID'] || 'box_client_id' %>
    client_secret: <%= ENV['BOX_CLIENT_SECRET'] || 'box_client_secret' %>
    jwt_public_key_id: <%= ENV['BOX_JWT_PUBLIC_KEY_ID'] || 'box_jwt_public_key_id' %>
    # Not a valid key
    jwt_private_key: <%= ENV['BOX_JWT_PRIVATE_KEY']&.inspect || '|
      -----BEGIN RSA PRIVATE KEY-----
      Proc-Type: 4,ENCRYPTED
      DEK-Info: AES-256-CBC,27A8637919E1F5589973BE48F34328FA

      RBpdUsIqzdM0qlng2JAitJWZeN080b5qlcD0FWu1QPmdAzb7W3C/zd6Im5i+srm5
      9VrUM2ZPT47SG+RFzElBtYKDvvsWhXCJtFJj9753pNZJ82EpIjEa5js/PyfMBX4p
      1Mxt0kD1or9+bXRZxASLVSOEq9RvYgd3/ss7eu0UPkTPBnjv0dU23Hk9/GluLKXr
      vTyoTpz/0sw45n+dzGRWYSRUISlyjebuKTYnR8uQKSW7Az3P+iwno0hb7PJtq2uv
      hiMmulCFr4L1qUZL1PYXNH5VpBh7swrQRlAwzzhmE9zWIhmDZ/I13LKQof28MlBf
      1y2tcyBWuac6f2u5kS2jej+2nVJNpoAOBjBlrhDSHgOb27A24k8LXxmngLeWDVvD
      yArZCTUKeWa29JA0MMCi65ytnsElFajh6iV156u+ZA8nQG3ZYS2idiJDWh0YZPik
      e2oEWMAqUtK+FVAztWl9Hyw1aePMts9cTN/G5NQqfnkx9VcIiBiHepj1TTX0oolb
      NWeZYl8Zp6Svtf5Gl74a640appRAS9qd0HJb8BfnBQ/VNVFV8q979iTdJWbotlIL
      Gc7DWTEWjfF0GSpaXOz+ksmyK+ulpUEJhA4ZCpecPZVNRhn4a2FYd69rqoRTF45a
      PoSEgiaISUF+WEiFGjAClsmMX3nqEzrfat0f1g1zF1s0Fs9rBbMLq2HHjkZWb18F
      99EoDnu8AnbJBSmi4mtIr3bNRxc7vXqwLDpU1EbV8JAT8Otb3d15VcU5gvMuHCZU
      g4TRS8bK63bm2QHt0wvSSwJ2m5DnfIs1gDLAwnT8r46gA5ALilj+TGn6U0LI9Bce
      -----END RSA PRIVATE KEY-----' %>
    jwt_private_key_password: <%= ENV['BOX_JWT_PRIVATE_KEY_PASSWORD'] ||
                                  'box_jwt_private_key_password' %>
    enterprise_id: "<%= ENV['BOX_ENTERPRISE_ID'] || 'box_enterprise_id' %>"
    exports_folder: <%= ENV['BOX_EXPORTS_FOLDER'] || 'TestUploads' %>
  lms:
    willo_labs:
      key: <%= ENV['WILLO_LABS_KEY'] || 'willo_labs_test_key' %>
      secret: <%= ENV['WILLO_LABS_SECRET'] || 'willo_labs_test_secret' %>
  openstax:
    accounts:
      client_id: openstax_accounts_client_id
      secret: openstax_accounts_secret
      url: http://localhost:2999
      stub: true
    content:
      abl_url: https://raw.githubusercontent.com/openstax/content-manager-approved-books/master/approved-book-list.json
      archive_path: apps/archive
      bucket_name: <%= ENV['OPENSTAX_CONTENT_BUCKET_NAME'] || 'not-a-real-bucket' %>
      domain: openstax.org
      s3_region: <%= ENV['OPENSTAX_CONTENT_S3_REGION'] || 'us-east-1' %>
      s3_access_key_id: <%= ENV['OPENSTAX_CONTENT_S3_ACCESS_KEY_ID'] || 'not-a-real-key' %>
      s3_secret_access_key: <%= ENV['OPENSTAX_CONTENT_S3_SECRET_ACCESS_KEY'] || 'not-a-real-key' %>
    exercises:
      client_id: <%= ENV['OPENSTAX_EXERCISES_CLIENT_ID'] %>
      secret: <%= ENV['OPENSTAX_EXERCISES_SECRET'] %>
      url: <%= ENV['OPENSTAX_EXERCISES_URL'] || 'https://staging.exercises.openstax.org' %>
      stub: <%= ActiveModel::Type::Boolean.new.cast(ENV.fetch('OPENSTAX_EXERCISES_STUB', false)) %>
    payments:
      client_id: <%= ENV['OPENSTAX_PAYMENTS_CLIENT_ID'] || 'openstax_payments_client_id' %>
      secret: <%= ENV['OPENSTAX_PAYMENTS_SECRET'] || 'openstax_payments_secret' %>
      url: <%= ENV['OPENSTAX_PAYMENTS_URL'] || 'http://localhost:8001' %>
      embed_js_url: <%= ENV['OPENSTAX_PAYMENTS_EMBED_JS_URL'] || 'http://localhost:8001/pay/embed.js' %>
      product_uuid: <%= ENV['OPENSTAX_PAYMENTS_PRODUCT_UUID'] || '6d60ab29-3b3d-575a-93ef-57d62e30984c' %>
      stub: true
    osweb:
      base_url: https://cms.openstax.org
  aws:
    s3:
      region: us-east-1
      exports_bucket_name: not-a-real-bucket
      access_key_id: NOTAREALKEY
      secret_access_key: NOTAREALSECRET

# Do not keep production secrets in the repository,
# instead read values from the environment.
production:
  secret_key_base: <%= ENV['SECRET_KEY_BASE'] %>
  mail_site_url: <%= ENV['MAIL_SITE_URL'] %>
  assets_url: <%= ENV['ASSETS_URL'] %>
  demo_user_password: <%= ENV['DEMO_USER_PASSWORD'] %>
  environment_name: <%= ENV['ENVIRONMENT_NAME'] %>
  exception_contact_name: <%= ENV['EXCEPTION_CONTACT_NAME'] %>
  release_version: <%= ENV['RELEASE_VERSION'] %>
  deployment_version: <%= ENV['DEPLOYMENT_VERSION'] %>
  sentry:
    dsn: <%= ENV['SENTRY_DSN'] %>
    csp_report_uri: <%= ENV['SENTRY_CSP_REPORT_URI'] %>
  response_validation:
    url: <%= ENV['RESPONSE_VALIDATION_URL'] %>
    timeout: <%= ENV['RESPONSE_VALIDATION_TIMEOUT'] %>
    stub: <%= ActiveModel::Type::Boolean.new.cast(ENV['RESPONSE_VALIDATION_STUB']) %>
  salesforce:
    login_domain: <%= ENV['SALESFORCE_LOGIN_DOMAIN'] %>
    username: <%= ENV['SALESFORCE_USERNAME'] %>
    password: <%= ENV['SALESFORCE_PASSWORD'] %>
    security_token: <%= ENV['SALESFORCE_SECURITY_TOKEN'] %>
    consumer_key: <%= ENV['SALESFORCE_CONSUMER_KEY'] %>
    consumer_secret: <%= ENV['SALESFORCE_CONSUMER_SECRET'] %>
  redis:
    password: <%= ENV['REDIS_PASSWORD'] %>
    host: <%= ENV['REDIS_HOST'] %>
    port: <%= ENV['REDIS_PORT'] %>
    db: <%= ENV['REDIS_DB'] %>
    url: <%= ENV['REDIS_URL'] %>
    namespaces:
      cache: <%= ENV['REDIS_NAMESPACES_CACHE'] %>
      settings: <%= ENV['REDIS_NAMESPACES_SETTINGS'] %>
      jobba: <%= ENV['REDIS_NAMESPACES_JOBBA'] %>
      active_force: <%= ENV['REDIS_NAMESPACES_ACTIVE_FORCE'] %>
      fake_exercises: <%= ENV['REDIS_NAMESPACES_FAKE_EXERCISES'] %>
      fake_payments: <%= ENV['REDIS_NAMESPACES_FAKE_PAYMENTS'] %>
  box:
    client_id: <%= ENV['BOX_CLIENT_ID'] %>
    client_secret: <%= ENV['BOX_CLIENT_SECRET'] %>
    jwt_public_key_id: <%= ENV['BOX_JWT_PUBLIC_KEY_ID'] %>
    jwt_private_key: <%= ENV['BOX_JWT_PRIVATE_KEY']&.inspect %>
    jwt_private_key_password: <%= ENV['BOX_JWT_PRIVATE_KEY_PASSWORD'] %>
    enterprise_id: "<%= ENV['BOX_ENTERPRISE_ID'] %>"
    exports_folder: <%= ENV['BOX_EXPORTS_FOLDER'] %>
  lms:
    willo_labs:
      key: <%= ENV['WILLO_LABS_KEY'] %>
      secret: <%= ENV['WILLO_LABS_SECRET'] %>
  openstax:
    accounts:
      client_id: <%= ENV['OPENSTAX_ACCOUNTS_CLIENT_ID'] %>
      secret: <%= ENV['OPENSTAX_ACCOUNTS_SECRET'] %>
      url: <%= ENV['OPENSTAX_ACCOUNTS_URL'] %>
      stub: <%= ActiveModel::Type::Boolean.new.cast(ENV['OPENSTAX_ACCOUNTS_STUB']) %>
    content:
      abl_url: <%= ENV['OPENSTAX_CONTENT_ABL_URL'] %>
      archive_path: <%= ENV['OPENSTAX_CONTENT_ARCHIVE_PATH'] %>
      bucket_name: <%= ENV['OPENSTAX_CONTENT_BUCKET_NAME'] %>
      domain: <%= ENV['OPENSTAX_CONTENT_DOMAIN'] %>
      s3_region: <%= ENV['OPENSTAX_CONTENT_S3_REGION'] %>
      s3_access_key_id: <%= ENV['OPENSTAX_CONTENT_S3_ACCESS_KEY_ID'] %>
      s3_secret_access_key: <%= ENV['OPENSTAX_CONTENT_S3_SECRET_ACCESS_KEY'] %>
    exercises:
      client_id: <%= ENV['OPENSTAX_EXERCISES_CLIENT_ID'] %>
      secret: <%= ENV['OPENSTAX_EXERCISES_SECRET'] %>
      url: <%= ENV['OPENSTAX_EXERCISES_URL'] || 'https://exercises.openstax.org' %>
      stub: <%= ActiveModel::Type::Boolean.new.cast(ENV['OPENSTAX_EXERCISES_STUB']) %>
    payments:
      client_id: <%= ENV['OPENSTAX_PAYMENTS_CLIENT_ID'] %>
      secret: <%= ENV['OPENSTAX_PAYMENTS_SECRET'] %>
      url: <%= ENV['OPENSTAX_PAYMENTS_URL'] %>
      embed_js_url: <%= ENV['OPENSTAX_PAYMENTS_EMBED_JS_URL'] %>
      product_uuid: <%= ENV['OPENSTAX_PAYMENTS_PRODUCT_UUID'] %>
      url: <%= ENV['OPENSTAX_PAYMENTS_URL'] %>
      stub: <%= ActiveModel::Type::Boolean.new.cast(ENV['OPENSTAX_PAYMENTS_STUB']) %>
    osweb:
      base_url: <%= ENV['OPENSTAX_OSWEB_BASE_URL'] %>
  aws:
    s3:
      region: <%= ENV['AWS_S3_REGION'] %>
      exports_bucket_name: <%= ENV['AWS_S3_EXPORTS_BUCKET_NAME'] %>
      access_key_id: <%= ENV['AWS_S3_ACCESS_KEY_ID'] %>
      secret_access_key: <%= ENV['AWS_S3_SECRET_ACCESS_KEY'] %>
